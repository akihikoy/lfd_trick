#!/usr/bin/python
from core_tool import *
def Help():
  return '''Test: follow a q_traj that we experienced a failure.
  Usage: test.follow1'''
def Run(t,*args):
  if not t.robot.Is('Baxter'):
    CPrint(4,'This test is only for Baxter.')
    return

  q_traj= [
    [-1.0544096854806089, -0.2776862141411402, 0.28087579936236179, 1.6743394798167504, -0.56010443409106647, -1.4960295455121526, 0.57304766831757548],
    [-1.0159048510309103, -0.35670424794068467, 0.33155411397969409, 1.8633858091147795, -0.47760512948645528, -1.5669787327781961, 0.42943210292684869],
    [-0.96476264324992855, -0.42311836836398564, 0.39891331930441265, 2.0439506789702975, -0.37623150979886999, -1.6560476331050802, 0.28551453075495919],
    [-0.92135636878025318, -0.46074409246091941, 0.45219267225159882, 2.1723939241120336, -0.29270704439420275, -1.7386809973087964, 0.17859944748797052],
    [-0.91656936668207734, -0.46815040865258956, 0.44552228082284107, 2.23785467540214, -0.27927621904754196, -1.7900609544614621, 0.13306757513154097],
    [-0.93221128726280056, -0.46074694640818792, 0.4028452571883796, 2.2804654161510274, -0.30677314754121038, -1.8313667753638549, 0.11292969674597057],
    [-0.95616162214784528, -0.4438852029022185, 0.3410417135902617, 2.3111201017741747, -0.35492921493141205, -1.8713039748545086, 0.10151482877769019],
    [-0.98726375374869657, -0.41888678102704663, 0.26351591185117751, 2.3249457989019198, -0.4190347361664789, -1.9063122558890606, 0.097811529213398987],
    [-1.0242863194214729, -0.38779126582438822, 0.17653166339142254, 2.3179885163791289, -0.49143987933855837, -1.9329493608376833, 0.1015981943603622],
    [-1.0656439567205895, -0.35291260947696607, 0.088150274951116991, 2.288431318010566, -0.5628497638992821, -1.9487387446436377, 0.11298602776161597],
    [-1.1093022995220323, -0.31625308645432337, 0.0060286379659039453, 2.2371535204199069, -0.62494896087120411, -1.9526402401261265, 0.13156378816155415],
    [-1.1529369448473732, -0.27921815728965166, -0.064511176363831246, 2.1674541197858996, -0.67262675398564087, -1.9448884257954011, 0.15577138596582199],
    [-1.1941583016955246, -0.2427746643154888, -0.12106907666635845, 2.0842902079877921, -0.70442681842261712, -1.9265182356842492, 0.18293576997005481],
    [-1.2306277028657173, -0.2078345031326814, -0.16355796294151093, 1.9935418251652242, -0.72147025495074257, -1.8989935296867262, 0.20976421147725308],
    [-1.2601494641579252, -0.1754772449445727, -0.19278311631736536, 1.8987549292218027, -0.72543267928147837, -1.8618017119766488, 0.2344030341002333],
    [-1.2820829098828739, -0.140350093340425, -0.20468057608344964, 1.7555429674580416, -0.71194974213929796, -1.7803069844426007, 0.27883255052236938],
    [-1.2963234838184399, -0.091146422224025386, -0.20502880942036245, 1.5646316591788036, -0.69127656886362843, -1.6637240498207164, 0.33486503311347571],
    [-1.3040405608865098, -0.027555656757953781, -0.20189327344255442, 1.3558203264485023, -0.67360914409511163, -1.5378054333056337, 0.38594834680744561],
    [-1.3052683310380491, 0.032722855229927496, -0.19958386393719424, 1.1805017632013304, -0.66021822984803624, -1.4315895338502982, 0.4147167986184731],
    [-1.2965664001224004, 0.051749212231033355, -0.19847320614447614, 1.1254808297736065, -0.64272551631330899, -1.386163254253725, 0.39388220133306295]]
  t_traj= [1.779648830049163, 3.2565732776900154, 4.1970153081875035, 4.69874673452241, 4.94874673452241, 5.19874673452241, 5.44874673452241,
    5.69874673452241, 5.94874673452241, 6.19874673452241, 6.44874673452241, 6.69874673452241, 6.94874673452241, 7.19874673452241, 7.44874673452241,
    7.896284115034163, 8.642031412999936, 9.729590437636922, 11.099266713005452, 11.958968797813638]
  x_traj= [t.robot.FK(q,arm=LEFT).tolist() for q in q_traj]

  #['s0', 's1', 'e0', 'e1', 'w0', 'w1', 'w2']
  #qvel_limits= [0.5, 0.5, 0.8, 0.8, 0.8, 0.8, 0.8]  #ORIGINAL
  #qvel_limits= [0.5, 0.5, 0.6, 0.6, 0.6, 0.6, 0.6]
  #qvel_limits= [0.1]*7
  #LimitQTrajVel(q_start=q_traj[0], q_traj=q_traj, t_traj=t_traj, qvel_limits=qvel_limits)
  #print 'Modified q_traj:',q_traj
  #print 'Modified t_traj:',t_traj

  '''WARNING: In the following code, following the trajectory always fails.
  This is due to a joint angle, e.g.
    'w1' (6th element) in
    [-1.0242863194214729, -0.38779126582438822, 0.17653166339142254, 2.3179885163791289, -0.49143987933855837, -1.9329493608376833, 0.1015981943603622],
  exceeds the joint limits.
  The trajectory was originally generated by IK with KDL, which is the reason of this issue.
  NOTE: In IK in baxter_pykdl, the joint limits are not taken into account.
  There was an error from /joint_trajectory_action_server:
  [ERROR] [WallTime: 1452044236.093979] /joint_trajectory_action_server: Exceeded Error Threshold on left_w1: -0.350152589571

  NOTE: This code has been fixed by myself@2016-01-06
  With this new baxter_pykdl code, IK fails in FollowXTraj.
  '''
  t.robot.MoveToQ(q_traj[0])
  CPrint(1,'Follow the trajectory.  Ready?')
  if not t.AskYesNo():  return
  #t.robot.FollowQTraj(q_traj, t_traj, arm=LEFT, blocking=True)
  t.robot.FollowXTraj(x_traj, t_traj, arm=LEFT, blocking=True)

  #t.robot.MoveToQ(q_traj[0])
  #for q,tm in zip(q_traj,t_traj):
    #CPrint(1,'Move to next point?',q)
    #if not t.AskYesNo(): break
    #t.robot.MoveToQ(q)

